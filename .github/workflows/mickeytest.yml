name: Mickey Test - Main Branch

on:
  workflow_dispatch

env:
  AZURE_WEBAPP_NAME: dummywebsite     # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.100'           # set this to the dot net version to use
  
jobs:
  build-main:
    name: "Build Of Main Branch"

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    
    - name: Install dependencies
      run: dotnet restore "${{ github.workspace }}/MvcMovie/MvcMovie.csproj"
    
    - name: Build
      run: dotnet build "${{ github.workspace }}/MvcMovie/MvcMovie.csproj" --configuration Release --no-restore
    
    - name: Test
      run: dotnet test "${{ github.workspace }}/MvcMovie/MvcMovie.csproj" --no-restore --verbosity normal
    
    - name: Publish
      run: |
        dotnet publish "${{ github.workspace }}/MvcMovie/MvcMovie.csproj" -c Release -o myapp
#        dotnet publish "${{ github.workspace }}/MvcMovie/MvcMovie.csproj" -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
        
    - name: dir
      run: |
        dir myapp

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        # Artifact name
        name: pleasework
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp"
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        # Duration after which artifact will expire in days. 0 means using default retention.
        retention-days: 90

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./myapp
        asset_name: web.config
        asset_content_type: text/html
